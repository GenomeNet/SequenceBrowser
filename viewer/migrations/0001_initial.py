# Generated by Django 5.1.1 on 2024-10-03 13:19

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Genome',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('strain_name', models.CharField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Sequence',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contig', models.CharField(max_length=200)),
                ('sequence', models.TextField()),
                ('genome', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sequences', to='viewer.genome')),
            ],
            options={
                'unique_together': {('genome', 'contig')},
            },
        ),
        migrations.CreateModel(
            name='Interaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('from_position', models.IntegerField()),
                ('to_position', models.IntegerField()),
                ('weight', models.FloatField()),
                ('from_sequence', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='interactions_from', to='viewer.sequence')),
                ('to_sequence', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='interactions_to', to='viewer.sequence')),
            ],
        ),
        migrations.CreateModel(
            name='Feature',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('source', models.CharField(max_length=200)),
                ('type', models.CharField(max_length=200)),
                ('start', models.IntegerField()),
                ('end', models.IntegerField()),
                ('score', models.FloatField(blank=True, null=True)),
                ('strand', models.CharField(blank=True, max_length=1, null=True)),
                ('phase', models.CharField(blank=True, max_length=1, null=True)),
                ('attributes', models.JSONField(blank=True, null=True)),
                ('sequence', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='features', to='viewer.sequence')),
            ],
        ),
        migrations.CreateModel(
            name='FeatureSummaryStat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_source', models.CharField(max_length=100)),
                ('mean_value', models.FloatField()),
                ('standard_deviation', models.FloatField()),
                ('feature', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='summary_stats', to='viewer.feature')),
            ],
            options={
                'unique_together': {('feature', 'data_source')},
            },
        ),
        migrations.CreateModel(
            name='NucleotideData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.PositiveIntegerField()),
                ('data_source', models.CharField(max_length=100)),
                ('value', models.FloatField()),
                ('sequence', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='nucleotide_data', to='viewer.sequence')),
            ],
            options={
                'unique_together': {('sequence', 'position', 'data_source')},
            },
        ),
        migrations.AddIndex(
            model_name='feature',
            index=models.Index(fields=['sequence', 'type'], name='viewer_feat_sequenc_3be198_idx'),
        ),
        migrations.AddIndex(
            model_name='feature',
            index=models.Index(fields=['sequence', 'start', 'end'], name='viewer_feat_sequenc_8fb962_idx'),
        ),
        migrations.AddIndex(
            model_name='feature',
            index=models.Index(fields=['sequence', 'attributes'], name='feature_attributes_idx'),
        ),
    ]
